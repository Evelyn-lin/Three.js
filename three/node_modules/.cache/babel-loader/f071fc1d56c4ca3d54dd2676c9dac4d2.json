{"remainingRequest":"/Users/evelyn/Desktop/仙桃学院/Three.js/three/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!/Users/evelyn/Desktop/仙桃学院/Three.js/three/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/evelyn/Desktop/仙桃学院/Three.js/three/node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!/Users/evelyn/Desktop/仙桃学院/Three.js/three/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/evelyn/Desktop/仙桃学院/Three.js/three/src/components/HelloWorld.vue","mtime":1597800174959},{"path":"/Users/evelyn/Desktop/仙桃学院/Three.js/three/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/evelyn/Desktop/仙桃学院/Three.js/three/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/evelyn/Desktop/仙桃学院/Three.js/three/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/evelyn/Desktop/仙桃学院/Three.js/three/node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <div id=\"button\">\n      <el-button\n        type=\"primary\"\n        @click=\"showFloor(1)\"\n        plain\n      >一层</el-button>\n      <el-button\n        type=\"primary\"\n        @click=\"showFloor(2)\"\n        plain\n      >二层</el-button>\n      <el-button\n        type=\"primary\"\n        @click=\"showFloor(3)\"\n        plain\n      >三层</el-button>\n      <el-button\n        type=\"primary\"\n        @click=\"showFloor(4)\"\n        plain\n      >四层</el-button>\n\n    </div>\n    <div id=\"container\"></div>\n    <div\n      id=\"myChart\"\n      :style=\"{width: '300px', height: '300px'}\"\n    ></div>\n    <!-- <el-card class=\"box-card\">\n      <div\n        slot=\"header\"\n        class=\"clearfix\"\n      >\n        <span>卡片名称</span>\n        <el-button\n          style=\"float: right; padding: 3px 0\"\n          type=\"text\"\n        >操作按钮</el-button>\n      </div>\n      <div\n        v-for=\"o in 4\"\n        :key=\"o\"\n        class=\"text item\"\n      >\n        {{'列表内容 ' + o }}\n      </div>\n    </el-card> -->\n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three'\n// import { OBJLoader, MTLLoader } from 'three-obj-mtl-loader'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader'\nimport { DDSLoader } from 'three/examples/jsm/loaders/DDSLoader'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js'\nimport axios from 'axios'\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      camera: null,\n      scene: null,\n      renderer: null,\n      mesh: null,\n      controls: null,\n      text: null,\n      classrooms: [],\n    }\n  },\n  methods: {\n    init: function () {\n      let container = document.getElementById('container')\n      this.camera = new THREE.PerspectiveCamera(\n        45,\n        container.clientWidth / container.clientHeight,\n        0.01,\n        100000\n      )\n      this.camera.position.set(80, 60, 120)\n      this.scene = new THREE.Scene()\n      // 辅助坐标系\n      // var axisHelper = new THREE.AxisHelper(250)\n      // this.scene.add(axisHelper)\n\n      this.renderer = new THREE.WebGLRenderer({ antialias: true })\n      this.renderer.setSize(container.clientWidth, container.clientHeight)\n\n      container.appendChild(this.renderer.domElement)\n      window.addEventListener('resize', this.onWindowResize, false)\n      window.addEventListener('click', this.handleMouseMove, false)\n    },\n    addControls() {\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement)\n    },\n    render() {\n      requestAnimationFrame(this.render)\n      this.renderer.render(this.scene, this.camera)\n    },\n    async loadObj(mtl, obj) {\n      await this.getInfo()\n      let _this = this\n      var onProgress = function (xhr) {\n        if (xhr.lengthComputable) {\n          var percentComplete = (xhr.loaded / xhr.total) * 100\n          console.log(Math.round(percentComplete, 2) + '% downloaded')\n        }\n      }\n\n      var onError = function () {}\n\n      var manager = new THREE.LoadingManager()\n      manager.addHandler(/\\.dds$/i, new DDSLoader())\n\n      // comment in the following line and import TGALoader if your asset uses TGA textures\n      // manager.addHandler( /\\.tga$/i, new TGALoader() );\n      // const materials = new THREE.MeshLambertMaterial({\n      //   color: 0x0000ff, //三角面颜色\n      //   wireframe: true //网格模型以线条的模式渲染\n      // })\n\n      let model = new MTLLoader(manager)\n        .setPath('/')\n        .load(mtl, function (materials) {\n          materials.preload()\n\n          new OBJLoader(manager)\n            .setMaterials(materials)\n            .setPath('/')\n            .load(\n              obj,\n              function (object) {\n                object.position.y = 0\n                _this.scene.add(object)\n              },\n              onProgress,\n              onError\n            )\n        })\n      console.log(model)\n      // const materials = new THREE.MeshLambertMaterial({\n      //   color: 0x0000ff, //三角面颜色\n      //   wireframe: true //网格模型以线条的模式渲染\n      // })\n      // new OBJLoader(manager)\n      //   // .setMaterials(materials)\n      //   .setPath('/')\n      //   .load(\n      //     '2.obj',\n      //     function (object) {\n      //       object.children.forEach((item, index) => {\n      //         if (_this.classrooms[index].status === 0) {\n      //           item.material = new THREE.MeshLambertMaterial({\n      //             color: 0xd54062\n      //           })\n      //           console.log(item)\n      //         }else  if (_this.classrooms[index].status === 1) {\n      //           item.material = new THREE.MeshLambertMaterial({\n      //             color: 0x799351\n      //           })\n      //           console.log(item)\n      //         }else  if (_this.classrooms[index].status === 2) {\n      //           item.material = new THREE.MeshLambertMaterial({\n      //             color: 0xffa36c\n      //           })\n      //           console.log(item)\n      //         }\n      //       })\n      //       object.position.y = 0\n      //       _this.scene.add(object)\n      //     },\n      //     onProgress,\n      //     onError\n      //   )\n    },\n    addLight() {\n      // 点光源\n      var point = new THREE.PointLight(0xffffff, 1)\n      point.position.set(100, 500, 100) //点光源位置\n      this.scene.add(point) //点光源添加到场景中\n      var pointLightHelper = new THREE.PointLightHelper(point, 1)\n      this.scene.add(pointLightHelper)\n\n      // 环境光\n      // var ambient = new THREE.AmbientLight(0xffffff)\n      // this.scene.add(ambient) //环境光对象添加到scene场景中\n    },\n    makeTextSprite(message, parameters) {\n      if (parameters === undefined) parameters = {}\n      var fontface = Object.prototype.hasOwnProperty.call(\n        parameters,\n        'fontface'\n      )\n        ? parameters['fontface']\n        : 'Arial'\n      // var fontface = parameters.hasOwnProperty('fontface')\n      //   ? parameters['fontface']\n      //   : 'Arial'\n\n      /* 字体大小 */\n      // var fontsize = parameters.hasOwnProperty('fontsize')\n      //   ? parameters['fontsize']\n      //   : 18\n      var fontsize = Object.prototype.hasOwnProperty.call(\n        parameters,\n        'fontsize'\n      )\n        ? parameters['fontsize']\n        : 18\n\n      /* 边框厚度 */\n      // var borderThickness = parameters.hasOwnProperty('borderThickness')\n      //   ? parameters['borderThickness']\n      //   : 4\n      var borderThickness = Object.prototype.hasOwnProperty.call(\n        parameters,\n        'borderThickness'\n      )\n        ? parameters['borderThickness']\n        : 4\n\n      /* 边框颜色 */\n      // var borderColor = parameters.hasOwnProperty('borderColor')\n      //   ? parameters['borderColor']\n      //   : { r: 0, g: 0, b: 0, a: 1.0 }\n      var borderColor = Object.prototype.hasOwnProperty.call(\n        parameters,\n        'borderColor'\n      )\n        ? parameters['borderColor']\n        : { r: 0, g: 0, b: 0, a: 1.0 }\n\n      /* 背景颜色 */\n      // var backgroundColor = parameters.hasOwnProperty('backgroundColor')\n      //   ? parameters['backgroundColor']\n      //   : { r: 255, g: 255, b: 255, a: 1.0 }\n      var backgroundColor = Object.prototype.hasOwnProperty.call(\n        parameters,\n        'backgroundColor'\n      )\n        ? parameters['backgroundColor']\n        : { r: 255, g: 255, b: 255, a: 1.0 }\n\n      /* 创建画布 */\n      var canvas = document.createElement('canvas')\n      var context = canvas.getContext('2d')\n\n      /* 字体加粗 */\n      context.font = 'Bold ' + fontsize + 'px ' + fontface\n\n      /* 获取文字的大小数据，高度取决于文字的大小 */\n      var metrics = context.measureText(message)\n      var textWidth = metrics.width\n\n      /* 背景颜色 */\n      context.fillStyle =\n        'rgba(' +\n        backgroundColor.r +\n        ',' +\n        backgroundColor.g +\n        ',' +\n        backgroundColor.b +\n        ',' +\n        backgroundColor.a +\n        ')'\n\n      /* 边框的颜色 */\n      context.strokeStyle =\n        'rgba(' +\n        borderColor.r +\n        ',' +\n        borderColor.g +\n        ',' +\n        borderColor.b +\n        ',' +\n        borderColor.a +\n        ')'\n      context.lineWidth = borderThickness\n\n      /* 绘制圆角矩形 */\n      this.roundRect(\n        context,\n        borderThickness / 2,\n        borderThickness / 2,\n        2 * textWidth + borderThickness,\n        2 * fontsize * 1.4 + borderThickness,\n        6\n      )\n\n      /* 字体颜色 */\n      context.fillStyle = '#FFF'\n      context.fillText(message, borderThickness, fontsize + borderThickness)\n\n      /* 画布内容用于纹理贴图 */\n      var texture = new THREE.Texture(canvas)\n      texture.needsUpdate = true\n\n      var spriteMaterial = new THREE.SpriteMaterial({ map: texture })\n      var sprite = new THREE.Sprite(spriteMaterial)\n\n      console.log(sprite.spriteMaterial)\n\n      /* 缩放比例 */\n      sprite.scale.set(10, 5, 0)\n\n      return sprite\n    },\n    add2dText() {\n      var earthGeometry = new THREE.SphereBufferGeometry(1, 16, 16)\n      var earthMaterial = new THREE.MeshPhongMaterial({\n        specular: 0x333333,\n        shininess: 5,\n        normalScale: new THREE.Vector2(0.85, 0.85),\n      })\n      let earth = new THREE.Mesh(earthGeometry, earthMaterial)\n      this.scene.add(earth)\n\n      var earthDiv = document.createElement('div')\n      earthDiv.className = 'label'\n      earthDiv.textContent = 'Earth'\n      earthDiv.style.marginTop = '-1em'\n      var earthLabel = new CSS2DObject(earthDiv)\n      earthLabel.position.set(0, 1, 0)\n      earth.add(earthLabel)\n    },\n    addMessage() {\n      this.text = this.makeTextSprite(`现在是${this.message}`, {\n        fontsize: 20,\n        borderColor: { r: 255, g: 0, b: 0, a: 0.4 } /* 边框黑色 */,\n        backgroundColor: { r: 255, g: 255, b: 255, a: 0.2 } /* 背景颜色 */,\n      })\n      this.text.center = new THREE.Vector2(0, 0)\n      this.scene.add(this.text)\n      this.text.position.set(10, 10, 0)\n    },\n    /* 绘制圆角矩形 */\n    roundRect(ctx, x, y, w, h, r) {\n      ctx.beginPath()\n      ctx.moveTo(x + r, y)\n      ctx.lineTo(x + w - r, y)\n      ctx.quadraticCurveTo(x + w, y, x + w, y + r)\n      ctx.lineTo(x + w, y + h - r)\n      ctx.quadraticCurveTo(x + w, y + h, x + w - r, y + h)\n      ctx.lineTo(x + r, y + h)\n      ctx.quadraticCurveTo(x, y + h, x, y + h - r)\n      ctx.lineTo(x, y + r)\n      ctx.quadraticCurveTo(x, y, x + r, y)\n      ctx.closePath()\n      ctx.fill()\n      ctx.stroke()\n    },\n    addCityText() {\n      var loader = new THREE.FontLoader()\n      let _this = this\n      loader.load('Arvo_Regular.json', function (font) {\n        var geometry = new THREE.TextGeometry('Hello three.js!', {\n          font: font,\n          size: 80,\n          height: 5,\n          curveSegments: 12,\n          bevelEnabled: true,\n          bevelThickness: 10,\n          bevelSize: 8,\n          bevelSegments: 5,\n        })\n        var mat = new THREE.MeshPhongMaterial({\n          color: 0xffe502,\n          specular: 0x009900,\n          shininess: 30,\n          shading: THREE.FlatShading,\n        })\n        var textObj = new THREE.Mesh(geometry, mat)\n        _this.scene.add(textObj)\n      })\n    },\n    async getInfo() {\n      let _this = this\n      await axios\n        .get(\n          ' http://49.234.121.178:7300/mock/5f3b3ddbdad41119bd229df4/example/mock'\n        )\n        .then((res) => {\n          if (res.status === 200) {\n            _this.classrooms = res.data.data.classrooms\n          }\n        })\n    },\n    handleMouseMove(event) {\n      // 将鼠标位置归一化为设备坐标。x 和 y 方向的取值范围是 (-1 to +1)\n      var raycaster = new THREE.Raycaster()\n      var mouse = new THREE.Vector2()\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1\n      // 通过摄像机和鼠标位置更新射线\n      raycaster.setFromCamera(mouse, this.camera)\n      // 计算物体和射线的焦点\n      var intersects = raycaster.intersectObjects(\n        this.scene.children[2].children\n      )\n      this.scene.children[2].children.forEach((item) => {\n        item.material = new THREE.MeshLambertMaterial({\n          color: 0xffffff,\n        })\n      })\n      if (intersects.length !== 0) {\n        for (var i = 0; i < this.scene.children[2].children.length; i++) {\n          intersects[0].object.material = new THREE.MeshBasicMaterial({\n            color: 0x009e60,\n          })\n        }\n      }\n\n      // 标签位置\n      // if (intersects.length) {\n      //   // console.log(intersects[0].object.name)\n      //   this.message = intersects[0].object.name\n      //   var vertices = new Float32Array([\n      //     ...intersects[0].object.geometry.attributes.position.array.slice(105)\n      //   ])\n      //   this.text.position.set(...vertices)\n\n      //   intersects[0].object.material = new THREE.MeshLambertMaterial({\n      //     color: 0x009e60\n      //   })\n      // }\n\n      this.renderer.render(this.scene, this.camera)\n    },\n    onWindowResize() {\n      // let windowHalfX = window.innerWidth / 2\n      // let windowHalfY = window.innerHeight / 2\n\n      this.camera.aspect = window.innerWidth / window.innerHeight\n      this.camera.updateProjectionMatrix()\n\n      this.renderer.setSize(window.innerWidth, window.innerHeight)\n    },\n    showFloor(num) {\n      this.scene.children.forEach((item, index) => {\n        item.visible = true\n        if (index > num + 1) {\n          item.visible = false\n        }\n      })\n    },\n    drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$echarts.init(document.getElementById('myChart'))\n      // 绘制图表\n      myChart.setOption({\n        title: {\n          text: '教室统计',\n          textStyle: {\n            color: '#eee',\n          },\n        },\n        tooltip: {},\n        series: [\n          {\n            name: '剩余间数',\n            type: 'pie',\n            data: [5, 20, 68],\n            itemStyle: {\n              color: '#b2ebf2',\n              shadowBlur: 200,\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\n            },\n          },\n        ],\n      })\n    },\n    addGLTF() {\n      let _this = this\n      let loader = new GLTFLoader()\n\n      loader.load('./1.gltf', function (gltf) {\n        console.log(gltf.meshes)\n        console.log('gltf对象场景属性', gltf.scene)\n        console.log('gltf对象相机属性', gltf.cameras)\n        // 返回的场景对象gltf.scene插入到threejs场景中\n        _this.scene.add(gltf.scene)\n        console.log(this.scene)\n      })\n    },\n    changePosition() {\n      console.log(this.scene.children)\n      let obj = this.scene.children\n      console.log(obj[0])\n      obj[1].position.y = -10\n      obj[2].position.y = -20\n      obj[2].position.y = -20\n    },\n  },\n  async mounted() {\n    this.init()\n    this.render()\n    this.addControls()\n    await this.loadObj('1c.mtl', '1c.obj')\n    await this.loadObj('2c.mtl', '2c.obj')\n    await this.loadObj('3c.mtl', '3c.obj')\n    await this.loadObj('4c.mtl', '4c.obj')\n    this.addLight()\n    this.changePosition()\n    // this.addGLTF()\n    // this.drawLine()\n    // this.addMessage()\n\n    // this.addCityText()\n    // this.add2dText()\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n#container {\n  height: 100vh;\n}\n#button {\n  color: red;\n  position: absolute;\n  top: 30px;\n  display: flex;\n  justify-content: center;\n  width: 100vw;\n}\n#myChart {\n  position: absolute;\n  top: 200px;\n  left: 50px;\n}\n.box-card {\n  position: absolute;\n  width: 480px;\n  top: 30px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}